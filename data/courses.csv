"Capital One SSRF","Web","Server Side Request Forgery (SSRF) is an attack where a target application or API is tricked into sending a request to another backend service, either over the internet or across the network the server is hosted on, to retrieve information from that service and relay it back to the attacker. Typically, this is accomplished by submitting a URL within a web request to an applicationâ€”if the application or API processing that request is susceptible to SSRF, it will attempt to make a secondary request to the URL contained in the payload of the original, malicious request. The response from that secondary request then makes its way back to the attacker via the vulnerable application. In a way, the SSRF-vulnerable application is being used as a proxy to retrieve information from a backend service or database that wouldn't trust or allow a direct connection from the attacker. There are legitimate reasons why an application would accept a URL from an end user to retrieve data from another server, e.g. embedding a YouTube video in a social media post. If these features aren't carefully designed or the traffic isn't inspected for suspicious URLs, an SSRF attack could be successfully carried out."
"Cross Site Scripting","Web","content2 cross site scripting"
"SQL Injection","Web","content 3 sql injection"
"Improper Assets Management","Api","content21 improper assets"
"Excessive Data Exposure","Api","Excessive data exposure occurs when an application, via API response, returns more information than necessary for a user to perform a specific action. When API developers mistakenly think that since data is not visible, it's not susceptible - that is when companies open their APIs to sensitive data exposure which can result in horrible situations like identity theft, fraud, and even leaked trade secrets. With over 155.8 million individuals in the US affected by data breaches in 2020 alone, protecting sensitive data exposure has been a major focus for the OWASP organization to help developers understand that hidden data is still highly vulnerable to attackers."